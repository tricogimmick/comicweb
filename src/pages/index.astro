---
import Layout from '../layouts/Layout.astro';
import pkg from 'sqlite3';
  const { Database } = pkg;

type MagazineType = {
	id: string,
	title: string,
	publisher: string|null,
	description: string|null
}

type IssueType = {
	id: string,
	magazine_id: string,
	title: string,
	cover_url: string | null,
	toc_url: string | null,
	description: string | null
}

function GetMagazines(db: Database) {
	return new Promise<MagazineType[]>((ok, ng) => {
		db.all<MagazineType>("SELECT * FROM magazines ORDER BY id", [], (err, rows) => {
			if (err || rows == null) {
				ng(err || "Data nor found");
			} else {
				ok(rows);
			}
		});
	})
}

function GetIssues(db: Database) {
	return new Promise<IssueType[]>((ok, ng) => {
		db.all<IssueType>("SELECT * FROM issues ORDER BY id", [] , (err, rows) => {
			if (err || rows == null) {
				ng(err || "Data nor found");
			} else {
				ok(rows);
			}
		});
	})
}

const dbPath = import.meta.env.COMICDB_PATH;
const db = new Database(dbPath);

const magazines = await GetMagazines(db);
const issues = await GetIssues(db);
const years = [2022, 2023];


db.close();

---

<Layout title="Welcome to Astro.">
	<main>
		<h1>Comic Magazine Data</h1>
		<div>
			{magazines.filter(m => m.id != 'BSMG').map(magazine => (
				<div>
					<h2>{magazine.title}</h2>
					{years.map(y => (
						<div>
							<h3>{y}</h3>
							<div>
							{issues
								.filter(x => x.magazine_id == magazine.id && x.id.substring(4,8) == String(y))
								.map(x => (<a href={`/issue/${x.id}`}>{x.id.substring(8)}</a>))}
							</div>
						</div>
					))}
					<ul>
					</ul>
				</div>
			))}
		</div>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	a {
		margin-left: 0.5rem;
	}
</style>
