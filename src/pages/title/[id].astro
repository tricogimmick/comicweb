---
import Layout from '../../layouts/Layout.astro';
import sqlite3 from 'sqlite3';
import type { TitleType } from '../../types/model';
import { getAuthors, getAllMagazines, getContentType } from '../../lib/functions'

type ParamType = {
    params: {
        id: number
    },
    props: {
        title: TitleType
    }
};

type QueryType = {
    issue_id: string,
    order_no: number,
    title_id: number,
    title: string,
    page_no: number,
    content_type: number,
    color: number | null,
    serialization_status: number | null,
    description: string | null,
    aurthors: string | null,
    scripters: string | null,
    magazine_name: string,
    issue_name: string
}

export function getStaticPaths() {
    const dbPath = import.meta.env.COMICDB_PATH;
	return new Promise<ParamType[]>((ok, ng) => {
        const db = new sqlite3.Database(dbPath);
		db.all<TitleType>("SELECT * FROM titles ORDER BY id", [] , (err, rows) => {
			if (err || rows == null) {
				ng(err || "Data not found");
			} else {
				ok(rows.map(x => ({ params: { id: x.id }, props: { title: x }})));
			}
		});
        db.close();
	})
}

function getContents(db: sqlite3.Database, titleId: number) {
	return new Promise<QueryType[]>((ok, ng) => {
		db.all<QueryType>(
            "SELECT c.*, m.title as magazine_name, i.title as issue_name FROM contents as c " +
            "JOIN issues as i on i.id = c.issue_id JOIN magazines as m ON m.id = i.magazine_id WHERE c.title_id = ? ORDER BY c.issue_id, c.order_no", 
            [titleId] , 
            (err, rows) => {
                if (err || rows == null) {
                    ng(err || "Data not found");
                } else {
                    ok(rows);
                }
            });
	})
}

const { title } = Astro.props;

const dbPath = import.meta.env.COMICDB_PATH;
const db = new sqlite3.Database(dbPath);

const magazines = await getAllMagazines(db);
const authors = await getAuthors(db, title.id, "AUTHOR");
const scripters = await getAuthors(db, title.id, "SCRIPT");

const magazineName = magazines.find(x => x.id = title.publication)?.title;

const contents = await getContents(db, title.id);

db.close();

---

<Layout title="Welcome to Astro.">
	<main>
		<h1>{title.title}</h1>
		<div>
            <dl>
                <dt>作者</dt>
                <dd>
                    {authors.map((a,i) => i < authors.length - 1 ? 
                        (<a href={`/author/${a.id}`}>{a.name}</a><span>&</span>) :
                        (<a href={`/author/${a.id}`}>{a.name}</a>))}
                </dd>
                {scripters.length > 0 ? 
                    <><dt>原作</dt><dd>{scripters.map((a,i) => i < scripters.length - 1 ? 
                        (<a href={`/author/${a.id}`}>{a.name}</a><span>&</span>) :
                        (<a href={`/author/${a.id}`}>{a.name}</a>))}</dd></> : 
                    <></>}
                <dt>掲載誌</dt>
                <dd>{magazineName}</dd>
                <dt>備考</dt>
                <dd>{title.description}</dd>
            </dl>
            <div>
                <table>
                    <thead>
                        <tr>
                            <th>掲載誌</th>
                            <th>掲載順</td>
                            <th>頁</td>
                            <th>種別</td>
                            <th>カラー有無</td>
                            <th>備考</td>
                        </tr>
                    </thead>
                    <tbody>
                        {contents.map(c => (
                            <tr>
                                <td><a href={`/issue/${c.issue_id}`}>{c.magazine_name} {c.issue_name}</a></td>
                                <td>{c.order_no}</td>
                                <td>{c.page_no}</td>
                                <td>{getContentType(c.content_type)}</td>
                                <td>{c.color == 1 ? "有" : ""}</td>
                                <td>{c.description}</td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            </div>
        </div>
        <div>
            <a href="/title">作品一覧へ戻る</a>
        </div>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 2rem;
		font-weight: 400;
	}
    span {
        margin-left: 0.5rem;
        margin-right: 0.5rem;
    }
</style>
